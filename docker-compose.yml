services:
  postgrest:
    restart: always
    volumes:
      - ./:/conf
    build:
      dockerfile: postgrest.Dockerfile
      context: .
    depends_on:
      - db
    ports:
      - 3000:3000
    networks:
      - database
      - caddy_postgrest

  api:
    restart: always
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8087:8087"
    volumes:
      - "./static/product_pics:/product_pics"
      - "./static/profile_pics:/profile_pics"
      - "./reports:/go/src/reports"
      - "./api/api.go:/go/src/api/api.go"
    networks:
      - caddy_postgrest
      - api_auth
    
  db:
    restart: always
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      # db and postgrest share a common _private_ and _internal_ network.
      # as the postgrest server handles authentication and has the credentials
      # anyway this is acceptable and saves us from handling db passwords.
      POSTGRES_HOST_AUTH_METHOD: "trust" 
    volumes:
      - "./pgdata:/var/lib/postgresql/data"
      - "./postgres_schema.sql:/docker-entrypoint-initdb.d/schema.sql"
    networks:
      - database

  caddy:
    restart: always
    image: caddy:2-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./caddy_data:/data"
      - "./Caddyfile:/etc/caddy/Caddyfile"
      - "./static:/static"
    networks:
      - caddy_postgrest
      - default
      - caddy_auth
  auth:
    restart: always
    build:
      context: . 
      dockerfile: auth/Dockerfile
    volumes:
      - type: bind
        source: "./auth"
        target: "/go/src/auth_server"
        read_only: true

      - type: bind
        source: "./secrets.json"
        target: "/go/src/secrets.json"
        read_only: true
    ports:
      - "8080:8080"
    networks:
      - caddy_auth
      - api_auth
  cron:
    restart: always
    build:
      context: .
      dockerfile: cron.Dockerfile
    volumes:
      - ./db_backups:/db_backups
      - ./reports:/reports
      - ./cronjobs/hourly:/etc/periodic/hourly
      - ./cronjobs/monthly:/etc/periodic/monthly
    networks:
      - database
networks:
  database:
    internal: true
  caddy_postgrest:
    internal: true
  caddy_auth:
    internal: true
  api_auth:
    internal: true

